---
import { ALL_MONS } from "../data/mons";
import Layout from "../layouts/Layout.astro";

import { getSortedPokemon } from "./api/results";

const data = await getSortedPokemon();

const generateCountPercent = (pokemon: any) => {
  const VoteFor = +pokemon._voteFor;
  const VoteAgainst = +pokemon._voteAgainst;
  if (VoteFor + VoteAgainst === 0) {
    return 0;
  }
  return (VoteFor / (VoteFor + VoteAgainst)) * 100;
};

const sorted = data.rows.sort((a, b) => {
  const difference = generateCountPercent(b) - generateCountPercent(a);

  if (difference === 0) {
    return b._voteFor - a._voteFor;
  }

  return difference;
});

console.log("data", sorted[0]);
const getImageForMon = (mon: number) => `/api/image/${mon}.png`;
---

<Layout title="Round But Faster">
  <div
    class="h-screen w-screen flex flex-col justify-between items-center relative"
  >
    <h2 class="text-2xl p-4">Results</h2>
    <div class="flex flex-col w-full max-w-2xl border">
      {
        sorted.map((row, index) => {
          return (
            <div class="relative flex border-b p-2 items-center justify-between">
              <div class="flex items-center">
                <div class="flex items-center pl-4">
                  <img src={getImageForMon(row.id)} width={64} height={64} />
                  <div class="pl-2 capitalize">{ALL_MONS[row.id + 1]}</div>
                </div>
              </div>
              <div class="pr-4">
                {generateCountPercent(row).toFixed(2) + "%"}
              </div>
              <div class="absolute top-0 left-0 z-20 flex items-center justify-center px-2 font-semibold text-white bg-gray-600 border border-gray-500 shadow-lg rounded-br-md">
                {index + 1}
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</Layout>
